#!/bin/bash
#############################################################
# Name:        Supportconfig Plugin for SUSE Enterprise Storage
# Description: Gathers important troubleshooting information
#              about SUSE Enterprise Storage
# License:     GPLv2
# Author:      Tim Serong <tserong@suse.com>
# Modified:    2015-02-13
#############################################################

SVER=1.0.0
RCFILE="/usr/lib/supportconfig/resources/scplugin.rc"
LOG_LINES=5000  # 0 means include the entire file
CENSORED='<<CENSORED BY SUPPORTCONFIG PLUGIN>>'

[ -s $RCFILE ] && . $RCFILE || { echo "ERROR: Initializing resource file: $RCFILE"; exit 1; }

# Helper functions liberated from Matt Barringer's supportutils-plugin-susecloud
validate_rpm_if_installed() {
    thisrpm="$1"
    echo "#==[ Validating RPM ]=================================#"
    if rpm -q "$thisrpm" >/dev/null 2>&1; then
        echo "# rpm -V $thisrpm"

        if rpm -V "$thisrpm"; then
            echo "Status: Passed"
        else
            echo "Status: WARNING"
        fi
    else
        echo "package $thisrpm is not installed"
        echo "Status: Skipped"
    fi
    echo
}

#############################################################
section_header "Supportconfig Plugin for SUSE Enterprise Storage, v${SVER}"
rpm_list=/usr/lib/supportconfig/resources/ses-rpm-list
for thisrpm in $(cat "$rpm_list"); do
    validate_rpm_if_installed "$thisrpm"
done

#############################################################
section_header "Ceph cluster status"

mkdir $LOG/ceph

if [ -x /usr/bin/ceph ]; then
    # timeout status commands after 5 seconds
    CT=5
    plugin_command "ceph --connect-timeout=$CT -s" > $LOG/ceph/ceph-status 2>&1
    plugin_command "ceph --connect-timeout=$CT mon dump" > $LOG/ceph/ceph-mon-dump 2>&1
    plugin_command "ceph --connect-timeout=$CT osd tree" > $LOG/ceph/ceph-osd-tree 2>&1
    plugin_command "ceph --connect-timeout=$CT osd df tree" > $LOG/ceph/ceph-osd-df-tree 2>&1
    plugin_command "ceph --connect-timeout=$CT df detail" > $LOG/ceph/ceph-df-detail 2>&1
    plugin_command "ceph --connect-timeout=$CT fs dump" > $LOG/ceph/ceph-fs-dump 2>&1
    plugin_command "ceph --connect-timeout=$CT auth list" |
        sed "s/\(key:\) .*/\1 $CENSORED/g" > $LOG/ceph/ceph-auth-list 2>&1
    # `ceph report` does actually include the above information, but
    # in JSON format.  Since adding `ceph report`, the above commands
    # remain, because their output is easier to read in a hurry ;)
    plugin_command "ceph --connect-timeout=$CT report" > $LOG/ceph/ceph-report 2>&1
    plugin_command "timeout $CT rados df" > $LOG/ceph/rados-df 2>&1
    plugin_command "timeout $CT rbd ls" > $LOG/ceph/rbd-ls 2>&1

    ceph --connect-timeout=$CT pg dump_stuck inactive 2>/dev/null |
    sed -nEe 's/^([0-9]+\.[0-9a-f]+).*/\1/p' |
    head -n ${OPTION_SES_INACTIVE_PG_QUERY_MAX:=20} |
    while read pg; do
        plugin_command "timeout $((CT * 2)) ceph --connect-timeout=$CT pg $pg query" \
                       > $LOG/ceph/ceph-pg-${pg}-query 2>&1
    done

    ps auxww | sed -nEe 's/^.*ceph-(mds|mgr|mon|osd) .*-id? *([^ ]*) .*/\1.\2/p' |
    while read daemon; do
        mkdir -p $LOG/ceph/$daemon

        ceph --connect-timeout=$CT daemon ${daemon} config show \
             > $LOG/ceph/${daemon}/ceph-daemon-config 2>&1
        ceph --connect-timeout=$CT daemon ${daemon} perf dump \
             > $LOG/ceph/${daemon}/ceph-daemon-perf 2>&1

        case $daemon in
            mds.*)
                ceph --connect-timeout=$CT daemon ${daemon} dump_historic_ops \
                     > $LOG/ceph/${daemon}/ceph-daemon-historic_ops 2>&1
                ceph --connect-timeout=$CT daemon ${daemon} status \
                     > $LOG/ceph/${daemon}/ceph-daemon-status 2>&1
                ;;
            mgr.*)
                ceph --connect-timeout=$CT daemon ${daemon} status \
                     > $LOG/ceph/${daemon}/ceph-daemon-status 2>&1
                ;;
            mon.*)
                ceph --connect-timeout=$CT daemon ${daemon} dump_historic_ops \
                     > $LOG/ceph/${daemon}/ceph-daemon-historic_ops 2>&1
                ;;
            osd.*)
                ceph --connect-timeout=$CT daemon ${daemon} dump_historic_ops \
                     > $LOG/ceph/${daemon}/ceph-daemon-historic_ops 2>&1
                ceph --connect-timeout=$CT daemon ${daemon} dump_ops_in_flight \
                     > $LOG/ceph/${daemon}/ceph-daemon-ops_in_flight 2>&1
                ceph --connect-timeout=$CT daemon ${daemon} status \
                     > $LOG/ceph/${daemon}/ceph-daemon-status 2>&1
                ceph --connect-timeout=$CT daemon ${daemon} dump_watchers \
                     > $LOG/ceph/${daemon}/ceph-daemon-watchers 2>&1
                ;;
        esac
    done

    plugin_message "Cluster status dumped to ceph subdirectory"
else
    plugin_message "/usr/bin/ceph not found"
fi

if [ -x /usr/sbin/ceph-disk ]; then
    plugin_command "ceph-disk list" > $LOG/ceph/ceph-disk-list 2>&1
else
    plugin_message "/usr/sbin/ceph-disk not found"
fi

#############################################################
section_header "Ceph config"

if [ -d /etc/ceph ]; then
    if files=$(find /etc/ceph -type f | egrep -v '.keyring$'); then
        if [ -n "$files" ]; then
            mkdir $LOG/ceph/conf
            for f in $files ; do
                pconf_files $f > $LOG/ceph/conf/$(basename $f)
            done
            plugin_message "Ceph config copied to ceph/conf subdirectory"
        fi
    fi
fi

#############################################################
section_header "Ceph log files"

if [ -d /var/log/ceph ]; then
    mkdir -p $LOG/ceph/log/ceph
    cp /var/log/ceph/* $LOG/ceph/log/ceph/
    plugin_message "Ceph logs copied to ceph/log subdirectory"
fi
# Depending on how radosgw is configured, its log files may
# be in /var/log/ceph/ (and thus captured above), or may be in
# /var/log/radosgw (which is what the ceph barclamp configures
# for crowbar deploys
if [ -d /var/log/radosgw ]; then
    mkdir -p $LOG/ceph/log/radosgw
    cp /var/log/radosgw/* $LOG/ceph/log/radosgw/
fi
# /var/log/ceph-radosgw/ was also used at some point in the past
if [ -d /var/log/ceph-radosgw ]; then
    mkdir -p $LOG/ceph/log/ceph-radosgw
    cp /var/log/ceph-radosgw/* $LOG/ceph/log/ceph-radosgw/
fi

#############################################################
section_header "Calamari log files"

if [ -d /var/log/calamari ]; then
    mkdir -p $LOG/ceph/log/calamari
    cp /var/log/calamari/*.log $LOG/ceph/log/calamari/
    plugin_message "Calamari logs copied to ceph/log subdirectory"
fi

#############################################################
section_header "openATTIC version"

if [ -x /usr/sbin/oaconfig ]; then
    plugin_command "/usr/sbin/oaconfig version" 2>&1
fi

#############################################################
section_header "openATTIC config files"

if [ -d /etc/openattic ]; then
    mkdir -p $LOG/ceph/conf/openattic
    cp -a /etc/openattic/* $LOG/ceph/conf/openattic/
    plugin_message "openATTIC config copied to ceph/conf/openattic/ subdirectory"
fi

#############################################################
section_header "openATTIC log files"

if [ -d /var/log/openattic ]; then
    mkdir -p $LOG/ceph/log/openattic
    cp /var/log/openattic/* $LOG/ceph/log/openattic/
    plugin_message "openATTIC logs copied to ceph/log/openattic/ subdirectory"
fi

#############################################################
section_header "Salt config"

if [ -d /etc/salt ]; then
    if files=$(find /etc/salt -type f | egrep -v '.pem$'); then
        if [ -n "$files" ]; then
            pconf_files $files
        fi
    fi
fi

#############################################################
section_header "Salt log files"

if [ -d /var/log/salt ]; then
    mkdir -p $LOG/ceph/log/salt
    cp /var/log/salt/{master,minion} $LOG/ceph/log/salt/
    plugin_message "Salt logs copied to ceph/log/salt subdirectory"
fi


#############################################################
section_header "DeepSea salt pillar"

if [ -d /srv/pillar ]; then
    mkdir -p $LOG/ceph/deepsea/pillar
    cp -r /srv/pillar/* $LOG/ceph/deepsea/pillar/
    plugin_message "Salt pillar copied to deepsea/pillar subdirectory"
fi

#############################################################
section_header "NFS-Ganesha config"

if [ -e /etc/ganesha/ganesha.conf ]; then
    mkdir -p $LOG/ceph/conf/ganesha
    cp /etc/ganesha/ganesha.conf $LOG/ceph/conf/ganesha/
    plugin_message "NFS-Ganesha config copied to ceph/conf/ganesha/ subdirectory"
fi

#############################################################
section_header "NFS-Ganesha log files"

if [ -e /var/log/ganesha/ganesha.log ]; then
    mkdir -p $LOG/ceph/log/ganesha
    cp /var/log/ganesha/* $LOG/ceph/log/ganesha/
    plugin_message "NFS-Ganesha logs copied to ceph/log/ganesha/ subdirectory"
fi

#############################################################
section_header "Ceph related services"

plugin_command "systemctl status -l 'ceph*'"
plugin_command "systemctl status -l 'salt*'"
plugin_command "systemctl status -l 'nfs-ganesha*'"
plugin_command "systemctl status -l 'tcmu*'"

#############################################################
section_header "prometheus log files"

mkdir -p $LOG/ceph/log/prometheus
plugin_message "All prometheus related logs copied to ceph/log/prometheus/ subdirectory"
# node_exporter should run on every node
plugin_command "journalctl -u prometheus-node_exporter.service" > $LOG/ceph/log/prometheus-node_exporter 2>&1
plugin_command "systemctl status -l prometheus-node_exporter.service" > $LOG/ceph/log/prometheus/prometheus-node_exporter_systemd_status 2>&1
if [ -x /usr/bin/prometheus ]; then
    plugin_command "journalctl -u prometheus.service" > $LOG/ceph/log/prometheus 2>&1
    plugin_command "systemctl status -l prometheus.service" > $LOG/ceph/log/prometheus/prometheus_systemd_status 2>&1
    plugin_command "journalctl -u prometheus-alertmanager.service" > $LOG/ceph/log/prometheus-alertmanager 2>&1
    plugin_command "systemctl status -l prometheus-alertmanager.service" > $LOG/ceph/log/prometheus/prometheus-alertmanager_systemd_status 2>&1
    # the ceph exporter doesn't log anything interesting, so no journalctl call
    plugin_command "systemctl status -l prometheus-ceph_exporter.service" > $LOG/ceph/log/prometheus/prometheus-ceph_exporter_systemd_status 2>&1
fi

#############################################################
section_header "grafana log files"

mkdir -p $LOG/ceph/log/grafana
if [ -e /var/log/grafana/grafana.log ]; then
    cp /var/log/grafana/* $LOG/ceph/log/grafana
    plugin_command "systemctl status -l grafana-server.service" > $LOG/ceph/log/grafana/systemd_status 2>&1
    plugin_message "Grafana logs copied to ceph/log/grafana/ subdirectory"
fi

#############################################################
